//Declaracion proc valida.
"PROC x(VAR DOUBLE f, VAR DOUBLE g, DOUBLE h) NI = 1_ui{" + '\n' +
    "OUT(5_ui);" + '\n' +
"};" + '\n' +
"DOUBLE w, y, z;" + '\n' +
"x(w,y,z);"

//Declaracion no valida por parametros con mismo nombre.
"PROC x(DOUBLE f, DOUBLE f) NI = 1_ui{" + '\n' +
    "OUT(5_ui);" + '\n' +
"};"

//Declaracion no valida por parametro con mismo nombre que variable.
"DOUBLE w;" + '\n' +
"PROC x(VAR DOUBLE w, VAR DOUBLE g, DOUBLE h) NI = 1_ui{" + '\n' +
    "OUT(5_ui);" + '\n' +
"};"

//Declaracion no valida por n params > 3.
"PROC x(DOUBLE f, DOUBLE g, DOUBLE h, DOUBLE i) NI = 1_ui{" + '\n' +
    "OUT(5_ui);" + '\n' +
"};"

//Declaracion no valida por NI fuera de rango.
"PROC x(VAR DOUBLE f, VAR DOUBLE g, DOUBLE h) NI = 0_ui{" + '\n' +
    "OUT(5_ui);" + '\n' +
"};"

//Param CVR es una cte.
"PROC x(VAR DOUBLE f) NI = 1_ui{" + '\n' +
    "OUT(5_ui);" + '\n' +
"};" + '\n' +
"x(5.0d1);"

//Param CVR es una cte.
"PROC x(VAR DOUBLE f, VAR DOUBLE g, DOUBLE h) NI = 1_ui{" + '\n' +
    "OUT(5_ui);" + '\n' +
"};" + '\n' +
"DOUBLE w, y, z;" + '\n' +
"x(7.2d11,y,7.2d11, z);"

//Caso que no andaba.
"DOUBLE a;" + '\n' +
"PROC x() NI = 1_ui{" + '\n' +
    "OUT(\"en x\");" + '\n' +
"};" + '\n' +
"a = 10.;" + '\n' +
"LOOP {" + '\n' +
    "OUT(a);" + '\n' +
    "a = a - 1.;" + '\n' +
    "x();" + '\n' +
"}UNTIL (a == 0.);"

//Otro caso que no andaba.
"PROC lala(DOUBLE a, DOUBLE a , DOUBLE a, DOUBLE a) NI = 5_ui {" + '\n' +
    "a = a;" + '\n' +
    "a = a;" + '\n' +
"};"

//Otro caso que no andaba.
"UINT a,b,c,d;" + '\n' +
"PROC lala(UINT e,UINT f,UINT g) NI = 3_ui{" + '\n' +
    "OUT(\"lala\");" + '\n' +
"};" + '\n' +
"lala(3_ui,c,d);"

//Varias asignaciones.
"UINT a; DOUBLE b;" + '\n' +
"a = a;" + '\n' +
"a = 5_ui;" + '\n' +
"b = a;" + '\n' +
"b = 5.0d-1;" + '\n' +
"b = -5.0d-1;"

//Lado izq asignacion no valido.
"a = 5_ui;" + '\n' +
"PROC lala() NI = 1_ui {" + '\n' +
    "DOUBLE a;" + '\n' +
"};" + '\n' +
"a = 5_ui;" + '\n' +
"lala = 5_ui;"

//Factor no valido.
"DOUBLE b;" + '\n' +
"PROC lala() NI = 1_ui {" + '\n' +
    "DOUBLE a;" + '\n' +
"};" + '\n' +
"b = b * c;" + '\n' +
"b = c;" + '\n' +
"b = lala();" + '\n' +
"b = lala;" + '\n' +
"b = lala * b;"

//Doubles negativos.
"DOUBLE b;" + '\n' +
"b = 5.0d-1;" + '\n' +
"b = -5.0d-1;" + '\n' +
"b = -b;" + '\n' +
"b = -5.0d1 * -b;"

//Uints negativos.
"UINT x;" + '\n' +
"x = -1_ui;" + '\n' +
"x = -1;"

//Impresiones.
"DOUBLE b; UINT x;" + '\n' +
"OUT(b);" + '\n' +
"OUT(-b);" + '\n' +
"OUT(x);" + '\n' +
"OUT(5_ui);" + '\n' +
"OUT(\"HOLA Q TAL\");" + '\n' +
"OUT(-5.0d1);"