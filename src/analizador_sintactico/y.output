   0  $accept : programa $end

   1  programa : bloque_sentencias

   2  bloque_sentencias : sentencia ';'
   3                    | sentencia ';' bloque_sentencias

   4  sentencia : sentencia_declarativa
   5            | sentencia_ejecutable

   6  sentencia_declarativa : PROC ID '(' lista_params ')' NI '=' CTE_UINT '{' bloque_sentencias '}'
   7                        | tipo lista_variables

   8  lista_params :
   9               | parametro
  10               | parametro ',' parametro
  11               | parametro ',' parametro ',' parametro

  12  parametro : VAR tipo ID
  13            | tipo ID

  14  tipo : UINT
  15       | DOUBLE

  16  lista_variables : ID
  17                  | ID ',' lista_variables

  18  sentencia_ejecutable : invocacion
  19                       | asignacion
  20                       | sentencia_loop
  21                       | sentencia_if
  22                       | print

  23  invocacion : ID '(' ')'
  24             | ID '(' lista_variables ')'

  25  asignacion : ID '=' expresion

  26  expresion : expresion '+' termino
  27            | expresion '-' termino
  28            | termino

  29  termino : termino '*' factor
  30          | termino '/' factor
  31          | factor

  32  factor : ID
  33         | CTE_UINT
  34         | CTE_DOUBLE
  35         | '-' factor

  36  sentencia_loop : LOOP bloque_estruct_ctrl UNTIL condicion

  37  sentencia_if : IF condicion THEN bloque_estruct_ctrl END_IF
  38               | IF condicion THEN bloque_estruct_ctrl ELSE bloque_estruct_ctrl END_IF

  39  bloque_estruct_ctrl : sentencia ';'
  40                      | '{' bloque_sentencias '}'

  41  condicion : '(' expresion comparador expresion ')'

  42  comparador : COMP_MAYOR_IGUAL
  43             | COMP_MENOR_IGUAL
  44             | '<'
  45             | '>'
  46             | COMP_IGUAL
  47             | COMP_DISTINTO

  48  print : OUT '(' imprimible ')'

  49  imprimible : CADENA
  50             | CTE_UINT
  51             | CTE_DOUBLE
  52             | ID

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	programa  goto 8
	bloque_sentencias  goto 9
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	invocacion  goto 14
	asignacion  goto 15
	sentencia_loop  goto 16
	sentencia_if  goto 17
	print  goto 18


state 1
	invocacion : ID . '(' ')'  (23)
	invocacion : ID . '(' lista_variables ')'  (24)
	asignacion : ID . '=' expresion  (25)

	'('  shift 19
	'='  shift 20
	.  error


state 2
	tipo : UINT .  (14)

	.  reduce 14


state 3
	tipo : DOUBLE .  (15)

	.  reduce 15


state 4
	sentencia_if : IF . condicion THEN bloque_estruct_ctrl END_IF  (37)
	sentencia_if : IF . condicion THEN bloque_estruct_ctrl ELSE bloque_estruct_ctrl END_IF  (38)

	'('  shift 21
	.  error

	condicion  goto 22


state 5
	sentencia_loop : LOOP . bloque_estruct_ctrl UNTIL condicion  (36)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	'{'  shift 23
	.  error

	sentencia  goto 24
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	invocacion  goto 14
	asignacion  goto 15
	sentencia_loop  goto 16
	sentencia_if  goto 17
	print  goto 18
	bloque_estruct_ctrl  goto 25


state 6
	print : OUT . '(' imprimible ')'  (48)

	'('  shift 26
	.  error


state 7
	sentencia_declarativa : PROC . ID '(' lista_params ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	ID  shift 27
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque_sentencias .  (1)

	.  reduce 1


state 10
	bloque_sentencias : sentencia . ';'  (2)
	bloque_sentencias : sentencia . ';' bloque_sentencias  (3)

	';'  shift 28
	.  error


state 11
	sentencia : sentencia_declarativa .  (4)

	.  reduce 4


state 12
	sentencia : sentencia_ejecutable .  (5)

	.  reduce 5


state 13
	sentencia_declarativa : tipo . lista_variables  (7)

	ID  shift 29
	.  error

	lista_variables  goto 30


state 14
	sentencia_ejecutable : invocacion .  (18)

	.  reduce 18


state 15
	sentencia_ejecutable : asignacion .  (19)

	.  reduce 19


state 16
	sentencia_ejecutable : sentencia_loop .  (20)

	.  reduce 20


state 17
	sentencia_ejecutable : sentencia_if .  (21)

	.  reduce 21


state 18
	sentencia_ejecutable : print .  (22)

	.  reduce 22


state 19
	invocacion : ID '(' . ')'  (23)
	invocacion : ID '(' . lista_variables ')'  (24)

	ID  shift 29
	')'  shift 31
	.  error

	lista_variables  goto 32


state 20
	asignacion : ID '=' . expresion  (25)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	'-'  shift 36
	.  error

	expresion  goto 37
	termino  goto 38
	factor  goto 39


state 21
	condicion : '(' . expresion comparador expresion ')'  (41)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	'-'  shift 36
	.  error

	expresion  goto 40
	termino  goto 38
	factor  goto 39


state 22
	sentencia_if : IF condicion . THEN bloque_estruct_ctrl END_IF  (37)
	sentencia_if : IF condicion . THEN bloque_estruct_ctrl ELSE bloque_estruct_ctrl END_IF  (38)

	THEN  shift 41
	.  error


state 23
	bloque_estruct_ctrl : '{' . bloque_sentencias '}'  (40)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	bloque_sentencias  goto 42
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	invocacion  goto 14
	asignacion  goto 15
	sentencia_loop  goto 16
	sentencia_if  goto 17
	print  goto 18


state 24
	bloque_estruct_ctrl : sentencia . ';'  (39)

	';'  shift 43
	.  error


state 25
	sentencia_loop : LOOP bloque_estruct_ctrl . UNTIL condicion  (36)

	UNTIL  shift 44
	.  error


state 26
	print : OUT '(' . imprimible ')'  (48)

	ID  shift 45
	CADENA  shift 46
	CTE_UINT  shift 47
	CTE_DOUBLE  shift 48
	.  error

	imprimible  goto 49


state 27
	sentencia_declarativa : PROC ID . '(' lista_params ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	'('  shift 50
	.  error


state 28
	bloque_sentencias : sentencia ';' .  (2)
	bloque_sentencias : sentencia ';' . bloque_sentencias  (3)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	$end  reduce 2
	'}'  reduce 2

	bloque_sentencias  goto 51
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	invocacion  goto 14
	asignacion  goto 15
	sentencia_loop  goto 16
	sentencia_if  goto 17
	print  goto 18


state 29
	lista_variables : ID .  (16)
	lista_variables : ID . ',' lista_variables  (17)

	','  shift 52
	';'  reduce 16
	')'  reduce 16


state 30
	sentencia_declarativa : tipo lista_variables .  (7)

	.  reduce 7


state 31
	invocacion : ID '(' ')' .  (23)

	.  reduce 23


state 32
	invocacion : ID '(' lista_variables . ')'  (24)

	')'  shift 53
	.  error


state 33
	factor : ID .  (32)

	.  reduce 32


state 34
	factor : CTE_UINT .  (33)

	.  reduce 33


state 35
	factor : CTE_DOUBLE .  (34)

	.  reduce 34


state 36
	factor : '-' . factor  (35)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	'-'  shift 36
	.  error

	factor  goto 54


state 37
	asignacion : ID '=' expresion .  (25)
	expresion : expresion . '+' termino  (26)
	expresion : expresion . '-' termino  (27)

	'+'  shift 55
	'-'  shift 56
	';'  reduce 25


state 38
	expresion : termino .  (28)
	termino : termino . '*' factor  (29)
	termino : termino . '/' factor  (30)

	'*'  shift 57
	'/'  shift 58
	COMP_MENOR_IGUAL  reduce 28
	COMP_MAYOR_IGUAL  reduce 28
	COMP_DISTINTO  reduce 28
	COMP_IGUAL  reduce 28
	';'  reduce 28
	')'  reduce 28
	'+'  reduce 28
	'-'  reduce 28
	'<'  reduce 28
	'>'  reduce 28


state 39
	termino : factor .  (31)

	.  reduce 31


state 40
	expresion : expresion . '+' termino  (26)
	expresion : expresion . '-' termino  (27)
	condicion : '(' expresion . comparador expresion ')'  (41)

	COMP_MENOR_IGUAL  shift 59
	COMP_MAYOR_IGUAL  shift 60
	COMP_DISTINTO  shift 61
	COMP_IGUAL  shift 62
	'+'  shift 55
	'-'  shift 56
	'<'  shift 63
	'>'  shift 64
	.  error

	comparador  goto 65


state 41
	sentencia_if : IF condicion THEN . bloque_estruct_ctrl END_IF  (37)
	sentencia_if : IF condicion THEN . bloque_estruct_ctrl ELSE bloque_estruct_ctrl END_IF  (38)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	'{'  shift 23
	.  error

	sentencia  goto 24
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	invocacion  goto 14
	asignacion  goto 15
	sentencia_loop  goto 16
	sentencia_if  goto 17
	print  goto 18
	bloque_estruct_ctrl  goto 66


state 42
	bloque_estruct_ctrl : '{' bloque_sentencias . '}'  (40)

	'}'  shift 67
	.  error


state 43
	bloque_estruct_ctrl : sentencia ';' .  (39)

	.  reduce 39


state 44
	sentencia_loop : LOOP bloque_estruct_ctrl UNTIL . condicion  (36)

	'('  shift 21
	.  error

	condicion  goto 68


state 45
	imprimible : ID .  (52)

	.  reduce 52


state 46
	imprimible : CADENA .  (49)

	.  reduce 49


state 47
	imprimible : CTE_UINT .  (50)

	.  reduce 50


state 48
	imprimible : CTE_DOUBLE .  (51)

	.  reduce 51


state 49
	print : OUT '(' imprimible . ')'  (48)

	')'  shift 69
	.  error


state 50
	sentencia_declarativa : PROC ID '(' . lista_params ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)
	lista_params : .  (8)

	UINT  shift 2
	DOUBLE  shift 3
	VAR  shift 70
	')'  reduce 8

	lista_params  goto 71
	tipo  goto 72
	parametro  goto 73


state 51
	bloque_sentencias : sentencia ';' bloque_sentencias .  (3)

	.  reduce 3


state 52
	lista_variables : ID ',' . lista_variables  (17)

	ID  shift 29
	.  error

	lista_variables  goto 74


state 53
	invocacion : ID '(' lista_variables ')' .  (24)

	.  reduce 24


state 54
	factor : '-' factor .  (35)

	.  reduce 35


state 55
	expresion : expresion '+' . termino  (26)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	'-'  shift 36
	.  error

	termino  goto 75
	factor  goto 39


state 56
	expresion : expresion '-' . termino  (27)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	'-'  shift 36
	.  error

	termino  goto 76
	factor  goto 39


state 57
	termino : termino '*' . factor  (29)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	'-'  shift 36
	.  error

	factor  goto 77


state 58
	termino : termino '/' . factor  (30)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	'-'  shift 36
	.  error

	factor  goto 78


state 59
	comparador : COMP_MENOR_IGUAL .  (43)

	.  reduce 43


state 60
	comparador : COMP_MAYOR_IGUAL .  (42)

	.  reduce 42


state 61
	comparador : COMP_DISTINTO .  (47)

	.  reduce 47


state 62
	comparador : COMP_IGUAL .  (46)

	.  reduce 46


state 63
	comparador : '<' .  (44)

	.  reduce 44


state 64
	comparador : '>' .  (45)

	.  reduce 45


state 65
	condicion : '(' expresion comparador . expresion ')'  (41)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	'-'  shift 36
	.  error

	expresion  goto 79
	termino  goto 38
	factor  goto 39


state 66
	sentencia_if : IF condicion THEN bloque_estruct_ctrl . END_IF  (37)
	sentencia_if : IF condicion THEN bloque_estruct_ctrl . ELSE bloque_estruct_ctrl END_IF  (38)

	ELSE  shift 80
	END_IF  shift 81
	.  error


state 67
	bloque_estruct_ctrl : '{' bloque_sentencias '}' .  (40)

	.  reduce 40


state 68
	sentencia_loop : LOOP bloque_estruct_ctrl UNTIL condicion .  (36)

	.  reduce 36


state 69
	print : OUT '(' imprimible ')' .  (48)

	.  reduce 48


state 70
	parametro : VAR . tipo ID  (12)

	UINT  shift 2
	DOUBLE  shift 3
	.  error

	tipo  goto 82


state 71
	sentencia_declarativa : PROC ID '(' lista_params . ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	')'  shift 83
	.  error


state 72
	parametro : tipo . ID  (13)

	ID  shift 84
	.  error


state 73
	lista_params : parametro .  (9)
	lista_params : parametro . ',' parametro  (10)
	lista_params : parametro . ',' parametro ',' parametro  (11)

	','  shift 85
	')'  reduce 9


state 74
	lista_variables : ID ',' lista_variables .  (17)

	.  reduce 17


state 75
	expresion : expresion '+' termino .  (26)
	termino : termino . '*' factor  (29)
	termino : termino . '/' factor  (30)

	'*'  shift 57
	'/'  shift 58
	COMP_MENOR_IGUAL  reduce 26
	COMP_MAYOR_IGUAL  reduce 26
	COMP_DISTINTO  reduce 26
	COMP_IGUAL  reduce 26
	';'  reduce 26
	')'  reduce 26
	'+'  reduce 26
	'-'  reduce 26
	'<'  reduce 26
	'>'  reduce 26


state 76
	expresion : expresion '-' termino .  (27)
	termino : termino . '*' factor  (29)
	termino : termino . '/' factor  (30)

	'*'  shift 57
	'/'  shift 58
	COMP_MENOR_IGUAL  reduce 27
	COMP_MAYOR_IGUAL  reduce 27
	COMP_DISTINTO  reduce 27
	COMP_IGUAL  reduce 27
	';'  reduce 27
	')'  reduce 27
	'+'  reduce 27
	'-'  reduce 27
	'<'  reduce 27
	'>'  reduce 27


state 77
	termino : termino '*' factor .  (29)

	.  reduce 29


state 78
	termino : termino '/' factor .  (30)

	.  reduce 30


state 79
	expresion : expresion . '+' termino  (26)
	expresion : expresion . '-' termino  (27)
	condicion : '(' expresion comparador expresion . ')'  (41)

	')'  shift 86
	'+'  shift 55
	'-'  shift 56
	.  error


state 80
	sentencia_if : IF condicion THEN bloque_estruct_ctrl ELSE . bloque_estruct_ctrl END_IF  (38)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	'{'  shift 23
	.  error

	sentencia  goto 24
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	invocacion  goto 14
	asignacion  goto 15
	sentencia_loop  goto 16
	sentencia_if  goto 17
	print  goto 18
	bloque_estruct_ctrl  goto 87


state 81
	sentencia_if : IF condicion THEN bloque_estruct_ctrl END_IF .  (37)

	.  reduce 37


state 82
	parametro : VAR tipo . ID  (12)

	ID  shift 88
	.  error


state 83
	sentencia_declarativa : PROC ID '(' lista_params ')' . NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	NI  shift 89
	.  error


state 84
	parametro : tipo ID .  (13)

	.  reduce 13


state 85
	lista_params : parametro ',' . parametro  (10)
	lista_params : parametro ',' . parametro ',' parametro  (11)

	UINT  shift 2
	DOUBLE  shift 3
	VAR  shift 70
	.  error

	tipo  goto 72
	parametro  goto 90


state 86
	condicion : '(' expresion comparador expresion ')' .  (41)

	.  reduce 41


state 87
	sentencia_if : IF condicion THEN bloque_estruct_ctrl ELSE bloque_estruct_ctrl . END_IF  (38)

	END_IF  shift 91
	.  error


state 88
	parametro : VAR tipo ID .  (12)

	.  reduce 12


state 89
	sentencia_declarativa : PROC ID '(' lista_params ')' NI . '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	'='  shift 92
	.  error


state 90
	lista_params : parametro ',' parametro .  (10)
	lista_params : parametro ',' parametro . ',' parametro  (11)

	','  shift 93
	')'  reduce 10


state 91
	sentencia_if : IF condicion THEN bloque_estruct_ctrl ELSE bloque_estruct_ctrl END_IF .  (38)

	.  reduce 38


state 92
	sentencia_declarativa : PROC ID '(' lista_params ')' NI '=' . CTE_UINT '{' bloque_sentencias '}'  (6)

	CTE_UINT  shift 94
	.  error


state 93
	lista_params : parametro ',' parametro ',' . parametro  (11)

	UINT  shift 2
	DOUBLE  shift 3
	VAR  shift 70
	.  error

	tipo  goto 72
	parametro  goto 95


state 94
	sentencia_declarativa : PROC ID '(' lista_params ')' NI '=' CTE_UINT . '{' bloque_sentencias '}'  (6)

	'{'  shift 96
	.  error


state 95
	lista_params : parametro ',' parametro ',' parametro .  (11)

	.  reduce 11


state 96
	sentencia_declarativa : PROC ID '(' lista_params ')' NI '=' CTE_UINT '{' . bloque_sentencias '}'  (6)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	bloque_sentencias  goto 97
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	invocacion  goto 14
	asignacion  goto 15
	sentencia_loop  goto 16
	sentencia_if  goto 17
	print  goto 18


state 97
	sentencia_declarativa : PROC ID '(' lista_params ')' NI '=' CTE_UINT '{' bloque_sentencias . '}'  (6)

	'}'  shift 98
	.  error


state 98
	sentencia_declarativa : PROC ID '(' lista_params ')' NI '=' CTE_UINT '{' bloque_sentencias '}' .  (6)

	.  reduce 6


35 terminals, 22 nonterminals
53 grammar rules, 99 states
