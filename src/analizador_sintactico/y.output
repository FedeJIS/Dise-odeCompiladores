   0  $accept : programa $end

   1  programa : bloque_sentencias

   2  bloque_sentencias : sentencia
   3                    | sentencia bloque_sentencias

   4  sentencia : sentencia_declarativa
   5            | sentencia_ejecutable

   6  sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}'
   7                        | tipo lista_variables ';'

   8  lista_parametros : parametro
   9                   | parametro ',' parametro
  10                   | parametro ',' parametro ',' parametro

  11  parametro : VAR tipo ID
  12            | tipo ID

  13  lista_variables : ID ',' lista_variables
  14                  | ID

  15  tipo : UINT
  16       | DOUBLE

  17  sentencia_ejecutable : asignacion ';'
  18                       | sentencia_loop
  19                       | sentencia_if
  20                       | invocacion ';'
  21                       | print ';'

  22  expresion : expresion '+' termino
  23            | expresion '-' termino
  24            | termino

  25  termino : termino '*' factor
  26          | termino '/' factor
  27          | factor

  28  factor : ID
  29         | CTE_UINT
  30         | CTE_DOUBLE

  31  asignacion : ID '=' expresion

  32  sentencia_loop : LOOP '{' bloque_sentencias '}' UNTIL condicion

  33  condicion : '(' expresion comparador expresion ')'

  34  comparador : COMP_MAYOR_IGUAL
  35             | COMP_MENOR_IGUAL
  36             | '<'
  37             | '>'
  38             | COMP_IGUAL
  39             | COMP_DISTINTO

  40  sentencia_if : IF condicion THEN bloque_condicional END_IF
  41               | IF condicion THEN bloque_condicional ELSE bloque_condicional END_IF

  42  bloque_condicional : sentencia
  43                     | '{' bloque_sentencias '}'

  44  invocacion : ID '(' lista_variables ')'

  45  print : OUT '(' CADENA ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	programa  goto 8
	bloque_sentencias  goto 9
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 1
	asignacion : ID . '=' expresion  (31)
	invocacion : ID . '(' lista_variables ')'  (44)

	'('  shift 19
	'='  shift 20
	.  error


state 2
	tipo : UINT .  (15)

	.  reduce 15


state 3
	tipo : DOUBLE .  (16)

	.  reduce 16


state 4
	sentencia_if : IF . condicion THEN bloque_condicional END_IF  (40)
	sentencia_if : IF . condicion THEN bloque_condicional ELSE bloque_condicional END_IF  (41)

	'('  shift 21
	.  error

	condicion  goto 22


state 5
	sentencia_loop : LOOP . '{' bloque_sentencias '}' UNTIL condicion  (32)

	'{'  shift 23
	.  error


state 6
	print : OUT . '(' CADENA ')'  (45)

	'('  shift 24
	.  error


state 7
	sentencia_declarativa : PROC . ID '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	ID  shift 25
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque_sentencias .  (1)

	.  reduce 1


state 10
	bloque_sentencias : sentencia .  (2)
	bloque_sentencias : sentencia . bloque_sentencias  (3)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	$end  reduce 2
	'}'  reduce 2

	bloque_sentencias  goto 26
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 11
	sentencia : sentencia_declarativa .  (4)

	.  reduce 4


state 12
	sentencia : sentencia_ejecutable .  (5)

	.  reduce 5


state 13
	sentencia_declarativa : tipo . lista_variables ';'  (7)

	ID  shift 27
	.  error

	lista_variables  goto 28


state 14
	sentencia_ejecutable : asignacion . ';'  (17)

	';'  shift 29
	.  error


state 15
	sentencia_ejecutable : sentencia_loop .  (18)

	.  reduce 18


state 16
	sentencia_ejecutable : sentencia_if .  (19)

	.  reduce 19


state 17
	sentencia_ejecutable : invocacion . ';'  (20)

	';'  shift 30
	.  error


state 18
	sentencia_ejecutable : print . ';'  (21)

	';'  shift 31
	.  error


state 19
	invocacion : ID '(' . lista_variables ')'  (44)

	ID  shift 27
	.  error

	lista_variables  goto 32


state 20
	asignacion : ID '=' . expresion  (31)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	.  error

	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 21
	condicion : '(' . expresion comparador expresion ')'  (33)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	.  error

	expresion  goto 39
	termino  goto 37
	factor  goto 38


state 22
	sentencia_if : IF condicion . THEN bloque_condicional END_IF  (40)
	sentencia_if : IF condicion . THEN bloque_condicional ELSE bloque_condicional END_IF  (41)

	THEN  shift 40
	.  error


state 23
	sentencia_loop : LOOP '{' . bloque_sentencias '}' UNTIL condicion  (32)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	bloque_sentencias  goto 41
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 24
	print : OUT '(' . CADENA ')'  (45)

	CADENA  shift 42
	.  error


state 25
	sentencia_declarativa : PROC ID . '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	'('  shift 43
	.  error


state 26
	bloque_sentencias : sentencia bloque_sentencias .  (3)

	.  reduce 3


state 27
	lista_variables : ID . ',' lista_variables  (13)
	lista_variables : ID .  (14)

	','  shift 44
	')'  reduce 14
	';'  reduce 14


state 28
	sentencia_declarativa : tipo lista_variables . ';'  (7)

	';'  shift 45
	.  error


state 29
	sentencia_ejecutable : asignacion ';' .  (17)

	.  reduce 17


state 30
	sentencia_ejecutable : invocacion ';' .  (20)

	.  reduce 20


state 31
	sentencia_ejecutable : print ';' .  (21)

	.  reduce 21


state 32
	invocacion : ID '(' lista_variables . ')'  (44)

	')'  shift 46
	.  error


state 33
	factor : ID .  (28)

	.  reduce 28


state 34
	factor : CTE_UINT .  (29)

	.  reduce 29


state 35
	factor : CTE_DOUBLE .  (30)

	.  reduce 30


state 36
	expresion : expresion . '+' termino  (22)
	expresion : expresion . '-' termino  (23)
	asignacion : ID '=' expresion .  (31)

	'+'  shift 47
	'-'  shift 48
	';'  reduce 31


state 37
	expresion : termino .  (24)
	termino : termino . '*' factor  (25)
	termino : termino . '/' factor  (26)

	'*'  shift 49
	'/'  shift 50
	COMP_MENOR_IGUAL  reduce 24
	COMP_MAYOR_IGUAL  reduce 24
	COMP_DISTINTO  reduce 24
	COMP_IGUAL  reduce 24
	')'  reduce 24
	';'  reduce 24
	'+'  reduce 24
	'-'  reduce 24
	'<'  reduce 24
	'>'  reduce 24


state 38
	termino : factor .  (27)

	.  reduce 27


state 39
	expresion : expresion . '+' termino  (22)
	expresion : expresion . '-' termino  (23)
	condicion : '(' expresion . comparador expresion ')'  (33)

	COMP_MENOR_IGUAL  shift 51
	COMP_MAYOR_IGUAL  shift 52
	COMP_DISTINTO  shift 53
	COMP_IGUAL  shift 54
	'+'  shift 47
	'-'  shift 48
	'<'  shift 55
	'>'  shift 56
	.  error

	comparador  goto 57


state 40
	sentencia_if : IF condicion THEN . bloque_condicional END_IF  (40)
	sentencia_if : IF condicion THEN . bloque_condicional ELSE bloque_condicional END_IF  (41)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	'{'  shift 58
	.  error

	sentencia  goto 59
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18
	bloque_condicional  goto 60


state 41
	sentencia_loop : LOOP '{' bloque_sentencias . '}' UNTIL condicion  (32)

	'}'  shift 61
	.  error


state 42
	print : OUT '(' CADENA . ')'  (45)

	')'  shift 62
	.  error


state 43
	sentencia_declarativa : PROC ID '(' . lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	UINT  shift 2
	DOUBLE  shift 3
	VAR  shift 63
	.  error

	lista_parametros  goto 64
	tipo  goto 65
	parametro  goto 66


state 44
	lista_variables : ID ',' . lista_variables  (13)

	ID  shift 27
	.  error

	lista_variables  goto 67


state 45
	sentencia_declarativa : tipo lista_variables ';' .  (7)

	.  reduce 7


state 46
	invocacion : ID '(' lista_variables ')' .  (44)

	.  reduce 44


state 47
	expresion : expresion '+' . termino  (22)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	.  error

	termino  goto 68
	factor  goto 38


state 48
	expresion : expresion '-' . termino  (23)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	.  error

	termino  goto 69
	factor  goto 38


state 49
	termino : termino '*' . factor  (25)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	.  error

	factor  goto 70


state 50
	termino : termino '/' . factor  (26)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	.  error

	factor  goto 71


state 51
	comparador : COMP_MENOR_IGUAL .  (35)

	.  reduce 35


state 52
	comparador : COMP_MAYOR_IGUAL .  (34)

	.  reduce 34


state 53
	comparador : COMP_DISTINTO .  (39)

	.  reduce 39


state 54
	comparador : COMP_IGUAL .  (38)

	.  reduce 38


state 55
	comparador : '<' .  (36)

	.  reduce 36


state 56
	comparador : '>' .  (37)

	.  reduce 37


state 57
	condicion : '(' expresion comparador . expresion ')'  (33)

	ID  shift 33
	CTE_UINT  shift 34
	CTE_DOUBLE  shift 35
	.  error

	expresion  goto 72
	termino  goto 37
	factor  goto 38


state 58
	bloque_condicional : '{' . bloque_sentencias '}'  (43)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	bloque_sentencias  goto 73
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 59
	bloque_condicional : sentencia .  (42)

	.  reduce 42


state 60
	sentencia_if : IF condicion THEN bloque_condicional . END_IF  (40)
	sentencia_if : IF condicion THEN bloque_condicional . ELSE bloque_condicional END_IF  (41)

	ELSE  shift 74
	END_IF  shift 75
	.  error


state 61
	sentencia_loop : LOOP '{' bloque_sentencias '}' . UNTIL condicion  (32)

	UNTIL  shift 76
	.  error


state 62
	print : OUT '(' CADENA ')' .  (45)

	.  reduce 45


state 63
	parametro : VAR . tipo ID  (11)

	UINT  shift 2
	DOUBLE  shift 3
	.  error

	tipo  goto 77


state 64
	sentencia_declarativa : PROC ID '(' lista_parametros . ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	')'  shift 78
	.  error


state 65
	parametro : tipo . ID  (12)

	ID  shift 79
	.  error


state 66
	lista_parametros : parametro .  (8)
	lista_parametros : parametro . ',' parametro  (9)
	lista_parametros : parametro . ',' parametro ',' parametro  (10)

	','  shift 80
	')'  reduce 8


state 67
	lista_variables : ID ',' lista_variables .  (13)

	.  reduce 13


state 68
	expresion : expresion '+' termino .  (22)
	termino : termino . '*' factor  (25)
	termino : termino . '/' factor  (26)

	'*'  shift 49
	'/'  shift 50
	COMP_MENOR_IGUAL  reduce 22
	COMP_MAYOR_IGUAL  reduce 22
	COMP_DISTINTO  reduce 22
	COMP_IGUAL  reduce 22
	')'  reduce 22
	';'  reduce 22
	'+'  reduce 22
	'-'  reduce 22
	'<'  reduce 22
	'>'  reduce 22


state 69
	expresion : expresion '-' termino .  (23)
	termino : termino . '*' factor  (25)
	termino : termino . '/' factor  (26)

	'*'  shift 49
	'/'  shift 50
	COMP_MENOR_IGUAL  reduce 23
	COMP_MAYOR_IGUAL  reduce 23
	COMP_DISTINTO  reduce 23
	COMP_IGUAL  reduce 23
	')'  reduce 23
	';'  reduce 23
	'+'  reduce 23
	'-'  reduce 23
	'<'  reduce 23
	'>'  reduce 23


state 70
	termino : termino '*' factor .  (25)

	.  reduce 25


state 71
	termino : termino '/' factor .  (26)

	.  reduce 26


state 72
	expresion : expresion . '+' termino  (22)
	expresion : expresion . '-' termino  (23)
	condicion : '(' expresion comparador expresion . ')'  (33)

	')'  shift 81
	'+'  shift 47
	'-'  shift 48
	.  error


state 73
	bloque_condicional : '{' bloque_sentencias . '}'  (43)

	'}'  shift 82
	.  error


state 74
	sentencia_if : IF condicion THEN bloque_condicional ELSE . bloque_condicional END_IF  (41)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	'{'  shift 58
	.  error

	sentencia  goto 59
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18
	bloque_condicional  goto 83


state 75
	sentencia_if : IF condicion THEN bloque_condicional END_IF .  (40)

	.  reduce 40


state 76
	sentencia_loop : LOOP '{' bloque_sentencias '}' UNTIL . condicion  (32)

	'('  shift 21
	.  error

	condicion  goto 84


state 77
	parametro : VAR tipo . ID  (11)

	ID  shift 85
	.  error


state 78
	sentencia_declarativa : PROC ID '(' lista_parametros ')' . NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	NI  shift 86
	.  error


state 79
	parametro : tipo ID .  (12)

	.  reduce 12


state 80
	lista_parametros : parametro ',' . parametro  (9)
	lista_parametros : parametro ',' . parametro ',' parametro  (10)

	UINT  shift 2
	DOUBLE  shift 3
	VAR  shift 63
	.  error

	tipo  goto 65
	parametro  goto 87


state 81
	condicion : '(' expresion comparador expresion ')' .  (33)

	.  reduce 33


state 82
	bloque_condicional : '{' bloque_sentencias '}' .  (43)

	.  reduce 43


state 83
	sentencia_if : IF condicion THEN bloque_condicional ELSE bloque_condicional . END_IF  (41)

	END_IF  shift 88
	.  error


state 84
	sentencia_loop : LOOP '{' bloque_sentencias '}' UNTIL condicion .  (32)

	.  reduce 32


state 85
	parametro : VAR tipo ID .  (11)

	.  reduce 11


state 86
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI . '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	'='  shift 89
	.  error


state 87
	lista_parametros : parametro ',' parametro .  (9)
	lista_parametros : parametro ',' parametro . ',' parametro  (10)

	','  shift 90
	')'  reduce 9


state 88
	sentencia_if : IF condicion THEN bloque_condicional ELSE bloque_condicional END_IF .  (41)

	.  reduce 41


state 89
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' . CTE_UINT '{' bloque_sentencias '}'  (6)

	CTE_UINT  shift 91
	.  error


state 90
	lista_parametros : parametro ',' parametro ',' . parametro  (10)

	UINT  shift 2
	DOUBLE  shift 3
	VAR  shift 63
	.  error

	tipo  goto 65
	parametro  goto 92


state 91
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT . '{' bloque_sentencias '}'  (6)

	'{'  shift 93
	.  error


state 92
	lista_parametros : parametro ',' parametro ',' parametro .  (10)

	.  reduce 10


state 93
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT '{' . bloque_sentencias '}'  (6)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	bloque_sentencias  goto 94
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 94
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias . '}'  (6)

	'}'  shift 95
	.  error


state 95
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}' .  (6)

	.  reduce 6


35 terminals, 21 nonterminals
46 grammar rules, 96 states
