   0  $accept : programa $end

   1  programa : bloque_sentencias

   2  bloque_sentencias : sentencia
   3                    | sentencia bloque_sentencias

   4  sentencia : sentencia_declarativa
   5            | sentencia_ejecutable

   6  sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}'
   7                        | tipo lista_variables ';'

   8  lista_parametros : parametro
   9                   | parametro ',' lista_parametros

  10  parametro : VAR tipo ID
  11            | tipo ID

  12  lista_variables : ID ',' lista_variables
  13                  | ID

  14  tipo : UINT
  15       | DOUBLE

  16  sentencia_ejecutable : asignacion ';'
  17                       | sentencia_loop
  18                       | sentencia_if
  19                       | invocacion ';'
  20                       | print ';'

  21  expresion : expresion '+' termino
  22            | expresion '-' termino
  23            | termino

  24  termino : termino '*' factor
  25          | termino '/' factor
  26          | factor

  27  factor : ID
  28         | CTE_UINT
  29         | CTE_DOUBLE

  30  asignacion : ID '=' expresion

  31  sentencia_loop : LOOP '{' bloque_sentencias '}' UNTIL '(' condicion ')'

  32  condicion : expresion comparador expresion

  33  comparador : COMP_MAYOR_IGUAL
  34             | COMP_MENOR_IGUAL
  35             | '<'
  36             | '>'
  37             | COMP_IGUAL
  38             | COMP_DISTINTO

  39  sentencia_if : IF '(' condicion ')' THEN bloque_condicional END_IF
  40               | IF '(' condicion ')' THEN bloque_condicional ELSE bloque_condicional END_IF

  41  bloque_condicional : sentencia
  42                     | '{' bloque_sentencias '}'

  43  invocacion : ID '(' lista_variables ')'

  44  print : OUT '(' CADENA ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	programa  goto 8
	bloque_sentencias  goto 9
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 1
	asignacion : ID . '=' expresion  (30)
	invocacion : ID . '(' lista_variables ')'  (43)

	'('  shift 19
	'='  shift 20
	.  error


state 2
	tipo : UINT .  (14)

	.  reduce 14


state 3
	tipo : DOUBLE .  (15)

	.  reduce 15


state 4
	sentencia_if : IF . '(' condicion ')' THEN bloque_condicional END_IF  (39)
	sentencia_if : IF . '(' condicion ')' THEN bloque_condicional ELSE bloque_condicional END_IF  (40)

	'('  shift 21
	.  error


state 5
	sentencia_loop : LOOP . '{' bloque_sentencias '}' UNTIL '(' condicion ')'  (31)

	'{'  shift 22
	.  error


state 6
	print : OUT . '(' CADENA ')'  (44)

	'('  shift 23
	.  error


state 7
	sentencia_declarativa : PROC . ID '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	ID  shift 24
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque_sentencias .  (1)

	.  reduce 1


state 10
	bloque_sentencias : sentencia .  (2)
	bloque_sentencias : sentencia . bloque_sentencias  (3)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	$end  reduce 2
	'}'  reduce 2

	bloque_sentencias  goto 25
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 11
	sentencia : sentencia_declarativa .  (4)

	.  reduce 4


state 12
	sentencia : sentencia_ejecutable .  (5)

	.  reduce 5


state 13
	sentencia_declarativa : tipo . lista_variables ';'  (7)

	ID  shift 26
	.  error

	lista_variables  goto 27


state 14
	sentencia_ejecutable : asignacion . ';'  (16)

	';'  shift 28
	.  error


state 15
	sentencia_ejecutable : sentencia_loop .  (17)

	.  reduce 17


state 16
	sentencia_ejecutable : sentencia_if .  (18)

	.  reduce 18


state 17
	sentencia_ejecutable : invocacion . ';'  (19)

	';'  shift 29
	.  error


state 18
	sentencia_ejecutable : print . ';'  (20)

	';'  shift 30
	.  error


state 19
	invocacion : ID '(' . lista_variables ')'  (43)

	ID  shift 26
	.  error

	lista_variables  goto 31


state 20
	asignacion : ID '=' . expresion  (30)

	ID  shift 32
	CTE_UINT  shift 33
	CTE_DOUBLE  shift 34
	.  error

	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 21
	sentencia_if : IF '(' . condicion ')' THEN bloque_condicional END_IF  (39)
	sentencia_if : IF '(' . condicion ')' THEN bloque_condicional ELSE bloque_condicional END_IF  (40)

	ID  shift 32
	CTE_UINT  shift 33
	CTE_DOUBLE  shift 34
	.  error

	expresion  goto 38
	termino  goto 36
	factor  goto 37
	condicion  goto 39


state 22
	sentencia_loop : LOOP '{' . bloque_sentencias '}' UNTIL '(' condicion ')'  (31)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	bloque_sentencias  goto 40
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 23
	print : OUT '(' . CADENA ')'  (44)

	CADENA  shift 41
	.  error


state 24
	sentencia_declarativa : PROC ID . '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	'('  shift 42
	.  error


state 25
	bloque_sentencias : sentencia bloque_sentencias .  (3)

	.  reduce 3


state 26
	lista_variables : ID . ',' lista_variables  (12)
	lista_variables : ID .  (13)

	','  shift 43
	')'  reduce 13
	';'  reduce 13


state 27
	sentencia_declarativa : tipo lista_variables . ';'  (7)

	';'  shift 44
	.  error


state 28
	sentencia_ejecutable : asignacion ';' .  (16)

	.  reduce 16


state 29
	sentencia_ejecutable : invocacion ';' .  (19)

	.  reduce 19


state 30
	sentencia_ejecutable : print ';' .  (20)

	.  reduce 20


state 31
	invocacion : ID '(' lista_variables . ')'  (43)

	')'  shift 45
	.  error


state 32
	factor : ID .  (27)

	.  reduce 27


state 33
	factor : CTE_UINT .  (28)

	.  reduce 28


state 34
	factor : CTE_DOUBLE .  (29)

	.  reduce 29


state 35
	expresion : expresion . '+' termino  (21)
	expresion : expresion . '-' termino  (22)
	asignacion : ID '=' expresion .  (30)

	'+'  shift 46
	'-'  shift 47
	';'  reduce 30


state 36
	expresion : termino .  (23)
	termino : termino . '*' factor  (24)
	termino : termino . '/' factor  (25)

	'*'  shift 48
	'/'  shift 49
	COMP_MENOR_IGUAL  reduce 23
	COMP_MAYOR_IGUAL  reduce 23
	COMP_DISTINTO  reduce 23
	COMP_IGUAL  reduce 23
	')'  reduce 23
	';'  reduce 23
	'+'  reduce 23
	'-'  reduce 23
	'<'  reduce 23
	'>'  reduce 23


state 37
	termino : factor .  (26)

	.  reduce 26


state 38
	expresion : expresion . '+' termino  (21)
	expresion : expresion . '-' termino  (22)
	condicion : expresion . comparador expresion  (32)

	COMP_MENOR_IGUAL  shift 50
	COMP_MAYOR_IGUAL  shift 51
	COMP_DISTINTO  shift 52
	COMP_IGUAL  shift 53
	'+'  shift 46
	'-'  shift 47
	'<'  shift 54
	'>'  shift 55
	.  error

	comparador  goto 56


state 39
	sentencia_if : IF '(' condicion . ')' THEN bloque_condicional END_IF  (39)
	sentencia_if : IF '(' condicion . ')' THEN bloque_condicional ELSE bloque_condicional END_IF  (40)

	')'  shift 57
	.  error


state 40
	sentencia_loop : LOOP '{' bloque_sentencias . '}' UNTIL '(' condicion ')'  (31)

	'}'  shift 58
	.  error


state 41
	print : OUT '(' CADENA . ')'  (44)

	')'  shift 59
	.  error


state 42
	sentencia_declarativa : PROC ID '(' . lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	UINT  shift 2
	DOUBLE  shift 3
	VAR  shift 60
	.  error

	lista_parametros  goto 61
	tipo  goto 62
	parametro  goto 63


state 43
	lista_variables : ID ',' . lista_variables  (12)

	ID  shift 26
	.  error

	lista_variables  goto 64


state 44
	sentencia_declarativa : tipo lista_variables ';' .  (7)

	.  reduce 7


state 45
	invocacion : ID '(' lista_variables ')' .  (43)

	.  reduce 43


state 46
	expresion : expresion '+' . termino  (21)

	ID  shift 32
	CTE_UINT  shift 33
	CTE_DOUBLE  shift 34
	.  error

	termino  goto 65
	factor  goto 37


state 47
	expresion : expresion '-' . termino  (22)

	ID  shift 32
	CTE_UINT  shift 33
	CTE_DOUBLE  shift 34
	.  error

	termino  goto 66
	factor  goto 37


state 48
	termino : termino '*' . factor  (24)

	ID  shift 32
	CTE_UINT  shift 33
	CTE_DOUBLE  shift 34
	.  error

	factor  goto 67


state 49
	termino : termino '/' . factor  (25)

	ID  shift 32
	CTE_UINT  shift 33
	CTE_DOUBLE  shift 34
	.  error

	factor  goto 68


state 50
	comparador : COMP_MENOR_IGUAL .  (34)

	.  reduce 34


state 51
	comparador : COMP_MAYOR_IGUAL .  (33)

	.  reduce 33


state 52
	comparador : COMP_DISTINTO .  (38)

	.  reduce 38


state 53
	comparador : COMP_IGUAL .  (37)

	.  reduce 37


state 54
	comparador : '<' .  (35)

	.  reduce 35


state 55
	comparador : '>' .  (36)

	.  reduce 36


state 56
	condicion : expresion comparador . expresion  (32)

	ID  shift 32
	CTE_UINT  shift 33
	CTE_DOUBLE  shift 34
	.  error

	expresion  goto 69
	termino  goto 36
	factor  goto 37


state 57
	sentencia_if : IF '(' condicion ')' . THEN bloque_condicional END_IF  (39)
	sentencia_if : IF '(' condicion ')' . THEN bloque_condicional ELSE bloque_condicional END_IF  (40)

	THEN  shift 70
	.  error


state 58
	sentencia_loop : LOOP '{' bloque_sentencias '}' . UNTIL '(' condicion ')'  (31)

	UNTIL  shift 71
	.  error


state 59
	print : OUT '(' CADENA ')' .  (44)

	.  reduce 44


state 60
	parametro : VAR . tipo ID  (10)

	UINT  shift 2
	DOUBLE  shift 3
	.  error

	tipo  goto 72


state 61
	sentencia_declarativa : PROC ID '(' lista_parametros . ')' NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	')'  shift 73
	.  error


state 62
	parametro : tipo . ID  (11)

	ID  shift 74
	.  error


state 63
	lista_parametros : parametro .  (8)
	lista_parametros : parametro . ',' lista_parametros  (9)

	','  shift 75
	')'  reduce 8


state 64
	lista_variables : ID ',' lista_variables .  (12)

	.  reduce 12


state 65
	expresion : expresion '+' termino .  (21)
	termino : termino . '*' factor  (24)
	termino : termino . '/' factor  (25)

	'*'  shift 48
	'/'  shift 49
	COMP_MENOR_IGUAL  reduce 21
	COMP_MAYOR_IGUAL  reduce 21
	COMP_DISTINTO  reduce 21
	COMP_IGUAL  reduce 21
	')'  reduce 21
	';'  reduce 21
	'+'  reduce 21
	'-'  reduce 21
	'<'  reduce 21
	'>'  reduce 21


state 66
	expresion : expresion '-' termino .  (22)
	termino : termino . '*' factor  (24)
	termino : termino . '/' factor  (25)

	'*'  shift 48
	'/'  shift 49
	COMP_MENOR_IGUAL  reduce 22
	COMP_MAYOR_IGUAL  reduce 22
	COMP_DISTINTO  reduce 22
	COMP_IGUAL  reduce 22
	')'  reduce 22
	';'  reduce 22
	'+'  reduce 22
	'-'  reduce 22
	'<'  reduce 22
	'>'  reduce 22


state 67
	termino : termino '*' factor .  (24)

	.  reduce 24


state 68
	termino : termino '/' factor .  (25)

	.  reduce 25


state 69
	expresion : expresion . '+' termino  (21)
	expresion : expresion . '-' termino  (22)
	condicion : expresion comparador expresion .  (32)

	'+'  shift 46
	'-'  shift 47
	')'  reduce 32


state 70
	sentencia_if : IF '(' condicion ')' THEN . bloque_condicional END_IF  (39)
	sentencia_if : IF '(' condicion ')' THEN . bloque_condicional ELSE bloque_condicional END_IF  (40)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	'{'  shift 76
	.  error

	sentencia  goto 77
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18
	bloque_condicional  goto 78


state 71
	sentencia_loop : LOOP '{' bloque_sentencias '}' UNTIL . '(' condicion ')'  (31)

	'('  shift 79
	.  error


state 72
	parametro : VAR tipo . ID  (10)

	ID  shift 80
	.  error


state 73
	sentencia_declarativa : PROC ID '(' lista_parametros ')' . NI '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	NI  shift 81
	.  error


state 74
	parametro : tipo ID .  (11)

	.  reduce 11


state 75
	lista_parametros : parametro ',' . lista_parametros  (9)

	UINT  shift 2
	DOUBLE  shift 3
	VAR  shift 60
	.  error

	lista_parametros  goto 82
	tipo  goto 62
	parametro  goto 63


state 76
	bloque_condicional : '{' . bloque_sentencias '}'  (42)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	bloque_sentencias  goto 83
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 77
	bloque_condicional : sentencia .  (41)

	.  reduce 41


state 78
	sentencia_if : IF '(' condicion ')' THEN bloque_condicional . END_IF  (39)
	sentencia_if : IF '(' condicion ')' THEN bloque_condicional . ELSE bloque_condicional END_IF  (40)

	ELSE  shift 84
	END_IF  shift 85
	.  error


state 79
	sentencia_loop : LOOP '{' bloque_sentencias '}' UNTIL '(' . condicion ')'  (31)

	ID  shift 32
	CTE_UINT  shift 33
	CTE_DOUBLE  shift 34
	.  error

	expresion  goto 38
	termino  goto 36
	factor  goto 37
	condicion  goto 86


state 80
	parametro : VAR tipo ID .  (10)

	.  reduce 10


state 81
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI . '=' CTE_UINT '{' bloque_sentencias '}'  (6)

	'='  shift 87
	.  error


state 82
	lista_parametros : parametro ',' lista_parametros .  (9)

	.  reduce 9


state 83
	bloque_condicional : '{' bloque_sentencias . '}'  (42)

	'}'  shift 88
	.  error


state 84
	sentencia_if : IF '(' condicion ')' THEN bloque_condicional ELSE . bloque_condicional END_IF  (40)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	'{'  shift 76
	.  error

	sentencia  goto 77
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18
	bloque_condicional  goto 89


state 85
	sentencia_if : IF '(' condicion ')' THEN bloque_condicional END_IF .  (39)

	.  reduce 39


state 86
	sentencia_loop : LOOP '{' bloque_sentencias '}' UNTIL '(' condicion . ')'  (31)

	')'  shift 90
	.  error


state 87
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' . CTE_UINT '{' bloque_sentencias '}'  (6)

	CTE_UINT  shift 91
	.  error


state 88
	bloque_condicional : '{' bloque_sentencias '}' .  (42)

	.  reduce 42


state 89
	sentencia_if : IF '(' condicion ')' THEN bloque_condicional ELSE bloque_condicional . END_IF  (40)

	END_IF  shift 92
	.  error


state 90
	sentencia_loop : LOOP '{' bloque_sentencias '}' UNTIL '(' condicion ')' .  (31)

	.  reduce 31


state 91
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT . '{' bloque_sentencias '}'  (6)

	'{'  shift 93
	.  error


state 92
	sentencia_if : IF '(' condicion ')' THEN bloque_condicional ELSE bloque_condicional END_IF .  (40)

	.  reduce 40


state 93
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT '{' . bloque_sentencias '}'  (6)

	ID  shift 1
	UINT  shift 2
	DOUBLE  shift 3
	IF  shift 4
	LOOP  shift 5
	OUT  shift 6
	PROC  shift 7
	.  error

	bloque_sentencias  goto 94
	sentencia  goto 10
	sentencia_declarativa  goto 11
	sentencia_ejecutable  goto 12
	tipo  goto 13
	asignacion  goto 14
	sentencia_loop  goto 15
	sentencia_if  goto 16
	invocacion  goto 17
	print  goto 18


state 94
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias . '}'  (6)

	'}'  shift 95
	.  error


state 95
	sentencia_declarativa : PROC ID '(' lista_parametros ')' NI '=' CTE_UINT '{' bloque_sentencias '}' .  (6)

	.  reduce 6


35 terminals, 21 nonterminals
45 grammar rules, 96 states
